diff --git a/spring-petclinic-api-gateway/src/main/resources/static/css/petclinic.css b/spring-petclinic-api-gateway/src/main/resources/static/css/petclinic.css
index d5fb1c5..dc2cefb 100644
--- a/spring-petclinic-api-gateway/src/main/resources/static/css/petclinic.css
+++ b/spring-petclinic-api-gateway/src/main/resources/static/css/petclinic.css
@@ -9387,6 +9387,121 @@ table td.action-column {
 hr {
   border-top: 1px dotted #34302D; }
 
+/* Chatbox container */
+.chatbox {
+  position: fixed;
+  bottom: 10px;
+  right: 10px;
+  width: 300px;
+  background-color: #f1f1f1;
+  border-radius: 10px;
+  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
+  display: flex;
+  flex-direction: column;
+}
+
+.chatbox.minimized .chatbox-content {
+  height: 40px;
+  /* Height when minimized (header only) */
+}
+
+.chatbox.minimized .chatbox-messages,
+.chatbox.minimized .chatbox-footer {
+  display: none;
+}
+
+/* Header styling */
+.chatbox-header {
+  background-color: #075E54;
+  color: white;
+  padding: 10px;
+  text-align: center;
+  border-top-left-radius: 10px;
+  border-top-right-radius: 10px;
+  cursor: pointer;
+}
+
+/* Chatbox content styling */
+.chatbox-content {
+  display: flex;
+  flex-direction: column;
+  height: 400px;
+  /* Adjust to desired height */
+  overflow: hidden;
+  /* Hide overflow to make it scrollable */
+}
+
+.chatbox-messages {
+  flex-grow: 1;
+  overflow-y: auto;
+  /* Allows vertical scrolling */
+  padding: 10px;
+}
+
+/* Chat bubbles styling */
+.chat-bubble {
+  max-width: 80%;
+  padding: 10px;
+  border-radius: 20px;
+  margin-bottom: 10px;
+  position: relative;
+  word-wrap: break-word;
+  font-size: 14px;
+}
+
+.chat-bubble strong {
+  font-weight: bold;
+}
+
+.chat-bubble em {
+  font-style: italic;
+}
+
+.chat-bubble.user {
+  background-color: #dcf8c6;
+  /* WhatsApp-style light green */
+  margin-left: auto;
+  text-align: right;
+  border-bottom-right-radius: 0;
+}
+
+.chat-bubble.bot {
+  background-color: #ffffff;
+  margin-right: auto;
+  text-align: left;
+  border-bottom-left-radius: 0;
+  border: 1px solid #e1e1e1;
+}
+
+/* Input field and button */
+.chatbox-footer {
+  padding: 10px;
+  background-color: #f9f9f9;
+  display: flex;
+}
+
+.chatbox-footer input {
+  flex-grow: 1;
+  padding: 10px;
+  border-radius: 20px;
+  border: 1px solid #ccc;
+  margin-right: 10px;
+  outline: none;
+}
+
+.chatbox-footer button {
+  background-color: #075E54;
+  color: white;
+  border: none;
+  padding: 10px;
+  border-radius: 50%;
+  cursor: pointer;
+}
+
+.chatbox-footer button:hover {
+  background-color: #128C7E;
+}
+
 @font-face {
   font-family: 'varela_roundregular';
   src: url("../fonts/varela_round-webfont.eot");
diff --git a/spring-petclinic-api-gateway/src/main/resources/static/index.html b/spring-petclinic-api-gateway/src/main/resources/static/index.html
index f7e49ef..8df7a11 100644
--- a/spring-petclinic-api-gateway/src/main/resources/static/index.html
+++ b/spring-petclinic-api-gateway/src/main/resources/static/index.html
@@ -58,6 +58,115 @@
         <div ui-view=""></div>
     </div>
 </div>
+<div class="chatbox" id="chatbox">
+    <div class="chatbox-header" onclick="toggleChatbox()">
+        Chat with Us!
+    </div>
+    <div class="chatbox-content" id="chatbox-content">
+        <div class="chatbox-messages" id="chatbox-messages">
+            <!-- Chat messages will be dynamically inserted here -->
+        </div>
+        <div class="chatbox-footer">
+            <input type="text" id="chatbox-input" placeholder="Type a message..." onkeydown="handleKeyPress(event)" />
+            <button onclick="sendMessage()">Send</button>
+        </div>
+    </div>
+</div>
+
+<!-- JavaScript for handling chatbox interaction -->
+<script>
+    function appendMessage(message, type) {
+        const chatMessages = document.getElementById('chatbox-messages');
+        const messageElement = document.createElement('div');
+        messageElement.classList.add('chat-bubble', type);
+
+        // Convert Markdown to HTML
+        const htmlContent = marked.parse(message); // Use marked.parse() for newer versions
+        messageElement.innerHTML = htmlContent;
+
+        chatMessages.appendChild(messageElement);
+
+        // Scroll to the bottom of the chatbox to show the latest message
+        chatMessages.scrollTop = chatMessages.scrollHeight;
+    }
+
+    function toggleChatbox() {
+        const chatbox = document.getElementById('chatbox');
+        const chatboxContent = document.getElementById('chatbox-content');
+
+        if (chatbox.classList.contains('minimized')) {
+            chatbox.classList.remove('minimized');
+            chatboxContent.style.height = '400px'; // Set to initial height when expanded
+        } else {
+            chatbox.classList.add('minimized');
+            chatboxContent.style.height = '40px'; // Set to minimized height
+        }
+    }
+
+    function sendMessage() {
+        const query = document.getElementById('chatbox-input').value;
+
+        // Only send if there's a message
+        if (!query.trim()) return;
+
+        // Clear the input field after sending the message
+        document.getElementById('chatbox-input').value = '';
+
+        // Display user message in the chatbox
+        appendMessage(query, 'user');
+
+        // Send the message to the backend
+        fetch('/api/chat/chatclient', {
+            method: 'POST',
+            headers: {
+                'Content-Type': 'application/json',
+            },
+            body: JSON.stringify(query),
+        })
+            .then(response => response.text())
+            .then(responseText => {
+                // Display the response from the server in the chatbox
+                appendMessage(responseText, 'bot');
+            })
+            .catch(error => {
+                console.error('Error:', error);
+                // Display the fallback message in the chatbox
+                appendMessage('Chat is currently unavailable', 'bot');
+            });
+    }
+
+    function handleKeyPress(event) {
+        if (event.key === "Enter") {
+            event.preventDefault(); // Prevents adding a newline
+            sendMessage(); // Send the message when Enter is pressed
+        }
+    }
+
+    // Save chat messages to localStorage
+    function saveChatMessages() {
+        const messages = document.getElementById('chatbox-messages').innerHTML;
+        localStorage.setItem('chatMessages', messages);
+    }
+
+    // Load chat messages from localStorage
+    function loadChatMessages() {
+        const messages = localStorage.getItem('chatMessages');
+        if (messages) {
+            document.getElementById('chatbox-messages').innerHTML = messages;
+            document.getElementById('chatbox-messages').scrollTop = document.getElementById('chatbox-messages').scrollHeight;
+        }
+    }
+
+    // Call loadChatMessages when the page loads
+    window.onload = loadChatMessages;
+
+    // Ensure messages are saved when navigating away
+    window.onbeforeunload = saveChatMessages;
+</script>
+
+<script th:src="@{/webjars/bootstrap/5.3.3/dist/js/bootstrap.bundle.min.js}"></script>
+<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
+
 <layout-footer></layout-footer>
 </body>
 
