# COMMON APPLICATION PROPERTIES

# embedded database init, supports PostgreSQL too trough the 'PostgreSQL' spring profile
spring:
datasource:
   url: jdbc:postgresql://<your-postgresql-server-name>.database.azure.com:5432/petclinic?sslmode=require
   username: myadmin
   password: <your-postgresql-password>
sql:
   init:
      schema-locations: classpath*:db/postgres/schema.sql
      data-locations: classpath*:db/postgres/data.sql
      mode: ALWAYS
jms:
   queue:
      visits-requests: visits-requests
      visits-confirmations: visits-confirmations
   servicebus:
      enabled: false  # disable messaging support by default
      namespace: ${SERVICEBUS_NAMESPACE}
      pricing-tier: premium
      passwordless-enabled: true
      credential:
      managed-identity-enabled: true
      client-id: ${CLIENT_ID}
sleuth:
   sampler:
      probability: 1.0
cloud:
   config:
      # Allow the microservices to override the remote properties with their own System properties or config file
      allow-override: true
      # Override configuration with any local property source
      override-none: true
jpa:
   open-in-view: false
   hibernate:
      ddl-auto: none
   show-sql: true

# Spring Boot 1.5 makes actuator secure by default
management.security.enabled: false
# Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
management.endpoints.web.exposure.include: "*"

# Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
# Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
spring.cloud.refresh.refreshable: false

# Logging
logging.level.org.springframework: INFO

# enable health probes
management.health.livenessState.enabled: true
management.health.readinessState.enabled: true
management.endpoint.health.probes.enabled: true

# Metrics
management:
endpoint:
   metrics:
      enabled: true
   prometheus:
      enabled: true
endpoints:
   web:
      exposure:
      include: '*'
metrics:
   export:
      prometheus:
      enabled: true
eureka:
client:
   serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/
   enableSelfPreservation: true
   registryFetchIntervalSeconds: 20
instance:
   preferIpAddress: true